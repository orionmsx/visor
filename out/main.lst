Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2025.03.13 - 07:09:41]

/Users/rafaellopezverdejo/Documents/proyectosMSX/asm/visor/src/main.asm
Errors: 0

       1   00:0000                      ;*********************************************************************
       2   00:0000                      ;*
       3   00:0000                      ;* Visor de pantallas
       4   00:0000                      ;*
       5   00:0000                      ;* Fecha: 09/03/2025
       6   00:0000                      ;* Autor: Rafael López "Orion"
       7   00:0000                      ;* Email: orion@orionmsx.com
       8   00:0000                      ;*
       9   00:0000                      ;*********************************************************************
      10   00:0000                      
      11   00:0000                      	output "out/main.bin"
      12   00:8200                      
      13   00:8200                          include "constantes.asm"
       1.  00:8200                      ;****************
       2.  00:8200                      ; SERVICIOS BIOS
       3.  00:8200                      ;****************
       4.  00:8200                      
       5.  00:8200  (00:00D5)           GTSTCK  equ	#00D5	;lee los cursores y joystick
       6.  00:8200  (00:013E)           RDVDP	equ	#013E	;lee registro del VDP
       7.  00:8200  (00:0047)           WRTVDP 	equ #0047	;escribe registro del VDP
       8.  00:8200  (00:0053)           SETWRT  equ #0053   ;habilita el VDP para escribir
       9.  00:8200  (00:004D)           WRTVRM	equ	#004D	;escribe en VRAM
      10.  00:8200                      
      11.  00:8200                      
      12.  00:8200                      ;*************************
      13.  00:8200                      ; DIRECCIONES IMPORTANTES
      14.  00:8200                      ;*************************
      15.  00:8200                      
      16.  00:8200  (00:FD9F)           HTIMI	equ #FD9F   ;dirección de la ISR original del sistema para el VDP
      17.  00:8200                      
      18.  00:8200                      
      19.  00:8200                      ;*************
      20.  00:8200                      ; ESPECIFICAS
      21.  00:8200                      ;*************
      22.  00:8200                      
      23.  00:8200  (00:0005)           ANCHO_MAPA  equ 5
      24.  00:8200  (00:0002)           ALTO_MAPA   equ 2
      25.  00:8200  (00:0006)           byte_6      equ 6
      26.  00:8200  (00:0006)           RETARDO_MAX equ	6
      14   00:8200                      
      15   00:8200                      ;**************
      16   00:8200                      ; CABECERA BIN
      17   00:8200                      ;**************
      18   00:8200                      
      19   00:8200  FE                  	db #fe
      20   00:8201  00 82               	dw BEGIN
      21   00:8203  30 88               	dw END
      22   00:8205  00 82               	dw BEGIN
      23   00:8207                      
      24   00:8207                      	org #8200
      25   00:8200                      
      26   00:8200                      ;*********************
      27   00:8200                      ; INICIO DEL PROGRAMA
      28   00:8200                      ;*********************
      29   00:8200                      
      30   00:8200                      BEGIN:
      31   00:8200                      
      32   00:8200  F3                      di
      33   00:8201  ED 56                   im 1
      34   00:8203                      
      35   00:8203                          ;Engancha nuestra custom ISR
      36   00:8203                          ;Aquí pondríamos im 1, pero ya lo ha hecho la inicialización de la ROM a 32 KB
      37   00:8203  3E C3                   ld a,0C3h                               ;código de la instrucción JP
      38   00:8205  32 9F FD                ld (HTIMI),a
      39   00:8208  21 60 82                ld hl,tickMain
      40   00:820B  22 A0 FD                ld (HTIMI+1),hl
      41   00:820E                          
      42   00:820E                          ;bloquea la lógica del juego para inicializar hardware
      43   00:820E  3E 01                   ld a,1
      44   00:8210  32 2D 88                ld (tickInProgress),a
      45   00:8213                      
      46   00:8213                          ;call init_vdp
      47   00:8213  CD 58 83                call SetVideoMode
      48   00:8216                      
      49   00:8216  21 E4 86                ld hl,tabla_colores
      50   00:8219  11 00 00                ld de,#0000 
      51   00:821C  CD 04 86                call depack_VRAM
      52   00:821F  21 E4 86                ld hl,tabla_colores
      53   00:8222  11 00 08                ld de,#0800 
      54   00:8225  CD 04 86                call depack_VRAM
      55   00:8228  21 E4 86                ld hl,tabla_colores
      56   00:822B  11 00 10                ld de,#1000 
      57   00:822E  CD 04 86                call depack_VRAM
      58   00:8231                      
      59   00:8231  21 63 87                ld hl,tabla_tiles
      60   00:8234  11 00 20                ld de,#2000 
      61   00:8237  CD 04 86                call depack_VRAM
      62   00:823A  21 63 87                ld hl,tabla_tiles
      63   00:823D  11 00 28                ld de,#2800 
      64   00:8240  CD 04 86                call depack_VRAM
      65   00:8243  21 63 87                ld hl,tabla_tiles
      66   00:8246  11 00 30                ld de,#3000 
      67   00:8249  CD 04 86                call depack_VRAM
      68   00:824C                      
      69   00:824C  AF                      xor a
      70   00:824D  21 29 88                ld hl,x_mapa
      71   00:8250  77                      ld (hl),a
      72   00:8251  23                      inc hl
      73   00:8252  77                      ld (hl),a
      74   00:8253                      
      75   00:8253  CD E5 82                call pinta_pantalla
      76   00:8256                      
      77   00:8256                          ;desbloquea la lógica del juego tras inicializar hardware
      78   00:8256  AF                      xor a
      79   00:8257  32 2D 88                ld (tickInProgress),a
      80   00:825A  CD 3E 01                call RDVDP
      81   00:825D                      
      82   00:825D  FB                      ei
      83   00:825E                      
      84   00:825E                      bucle_infinito:
      85   00:825E  18 FE                   jr $
      86   00:8260                      
      87   00:8260                      ;.bucle:
      88   00:8260                      ;    halt
      89   00:8260                      ;
      90   00:8260                      ;    ld a,(retardo)
      91   00:8260                      ;	inc a
      92   00:8260                      ;	ld (retardo),a
      93   00:8260                      ;	cp RETARDO_MAX
      94   00:8260                      ;	jr. nz,.bucle
      95   00:8260                      ;
      96   00:8260                      ;    xor a
      97   00:8260                      ;	call GTSTCK
      98   00:8260                      ;
      99   00:8260                      ;    cp 1
     100   00:8260                      ;    call z,do_arriba
     101   00:8260                      ;	cp 3
     102   00:8260                      ;	call z,do_derecha
     103   00:8260                      ;    cp 5
     104   00:8260                      ;    call z,do_abajo
     105   00:8260                      ;	cp 7
     106   00:8260                      ;	call z,do_izquierda
     107   00:8260                      ;
     108   00:8260                      ;    xor a
     109   00:8260                      ;	ld (retardo),a
     110   00:8260                      ;
     111   00:8260                      ;    jr .bucle
     112   00:8260                      
     113   00:8260                          include "isr.asm"
       1.  00:8260                      tickMain:
       2.  00:8260  F3                      di
       3.  00:8261  CD 3E 01                call RDVDP                      ;borra flag de interrupción
       4.  00:8264  21 2D 88                ld hl,tickInProgress            ;si hay una ISR anterior sin terminar no ejecuta la lógica del juego
       5.  00:8267  CB 46                   bit 0,(hl)
       6.  00:8269  20 33                   jr nz,tickMain2
       7.  00:826B  34                      inc (hl)                        ;pone la marca de ISR trabajando
       8.  00:826C  FB                      ei
       9.  00:826D                      
      10.  00:826D                          ;call chkControls                ;actualiza el estado de los controles
      11.  00:826D                          ;call runGame                    ;lógica del juego
      12.  00:826D                      
      13.  00:826D  21 2E 88                ld hl,timer                     ;incrementa el contador global del juego
      14.  00:8270  34                      inc (hl)
      15.  00:8271                      
      16.  00:8271  3A 2F 88                ld a,(enCortinilla)
      17.  00:8274  B7                      or a
      18.  00:8275  28 0B                   jr z,.seguimos
      19.  00:8277                      
      20.  00:8277                          ;call doCortinilla
      21.  00:8277  CD 7F 83                call drawCortinilla
      22.  00:827A  21 2C 88                ld hl,waitCounter
      23.  00:827D                          ;dec	(hl)                        ;decrementa el contador de espera (empezamos con valor 31)
      24.  00:827D  FA 82 82                jp m,.seguimos
      25.  00:8280  18 18                   jr .terminamos
      26.  00:8282                      
      27.  00:8282                      .seguimos:
      28.  00:8282                      
      29.  00:8282  AF                      xor a
      30.  00:8283  CD D5 00            	call GTSTCK
      31.  00:8286                      
      32.  00:8286  FE 01                   cp 1
      33.  00:8288  CC A3 82                call z,do_arriba
      34.  00:828B  FE 03               	cp 3
      35.  00:828D  CC C4 82            	call z,do_derecha
      36.  00:8290  FE 05                   cp 5
      37.  00:8292  CC B3 82                call z,do_abajo
      38.  00:8295  FE 07               	cp 7
      39.  00:8297  CC D5 82            	call z,do_izquierda
      40.  00:829A                      
      41.  00:829A                      .terminamos:
      42.  00:829A  AF                      xor a                           ;quita la marca de ISR trabajando
      43.  00:829B  32 2D 88                ld (tickInProgress),a
      44.  00:829E                      
      45.  00:829E                      tickMain2:
      46.  00:829E  CD 3E 01                call RDVDP                      ;lee y borra el flag de interrupción
      47.  00:82A1  B7                      or a
      48.  00:82A2                      
      49.  00:82A2  C9                      ret
     114   00:82A3                          include "rutinas.asm"
       1.  00:82A3                      do_arriba:
       2.  00:82A3  F5                      push af
       3.  00:82A4  3A 2A 88                ld a,(y_mapa)
       4.  00:82A7  B7                      or a
       5.  00:82A8  28 07                   jr z,.end
       6.  00:82AA  3D                      dec a
       7.  00:82AB  32 2A 88                ld (y_mapa),a
       8.  00:82AE  CD 71 83                call doCortinilla
       9.  00:82B1                      .end:
      10.  00:82B1  F1                      pop af
      11.  00:82B2  C9                      ret
      12.  00:82B3                      
      13.  00:82B3                      do_abajo:
      14.  00:82B3  F5                      push af
      15.  00:82B4  3A 2A 88                ld a,(y_mapa)
      16.  00:82B7  FE 01                   cp (ALTO_MAPA-1)
      17.  00:82B9  28 07                   jr z,.end
      18.  00:82BB  3C                      inc a
      19.  00:82BC  32 2A 88                ld (y_mapa),a
      20.  00:82BF  CD 71 83                call doCortinilla
      21.  00:82C2                      .end:
      22.  00:82C2  F1                      pop af
      23.  00:82C3  C9                      ret
      24.  00:82C4                      
      25.  00:82C4                      
      26.  00:82C4                      do_derecha:
      27.  00:82C4  F5                      push af
      28.  00:82C5  3A 29 88                ld a,(x_mapa)
      29.  00:82C8  FE 04                   cp (ANCHO_MAPA-1)
      30.  00:82CA  28 07                   jr z,.end
      31.  00:82CC  3C                      inc a
      32.  00:82CD  32 29 88                ld (x_mapa),a
      33.  00:82D0  CD 71 83                call doCortinilla
      34.  00:82D3                      .end:
      35.  00:82D3  F1                      pop af
      36.  00:82D4  C9                      ret
      37.  00:82D5                      
      38.  00:82D5                      
      39.  00:82D5                      do_izquierda:
      40.  00:82D5  F5                      push af
      41.  00:82D6  3A 29 88                ld a,(x_mapa)
      42.  00:82D9  B7                      or a
      43.  00:82DA  28 07                   jr z,.end
      44.  00:82DC  3D                      dec a
      45.  00:82DD  32 29 88                ld (x_mapa),a
      46.  00:82E0  CD 71 83                call doCortinilla
      47.  00:82E3                      .end:
      48.  00:82E3  F1                      pop af
      49.  00:82E4  C9                      ret
      50.  00:82E5                      
      51.  00:82E5                      
      52.  00:82E5                      pinta_pantalla:
      53.  00:82E5  CD 48 83                call apaga_pantalla
      54.  00:82E8  CD FD 82                call calcula_puntero
      55.  00:82EB  87                      add a,a
      56.  00:82EC  21 A4 83                ld hl,pantallas
      57.  00:82EF  CD 0D 83                call getIndexHL_A
      58.  00:82F2  11 00 38                ld de,#3800
      59.  00:82F5  76                      halt
      60.  00:82F6  CD 04 86                call depack_VRAM
      61.  00:82F9  CD 50 83                call enciende_pantalla
      62.  00:82FC  C9                      ret
      63.  00:82FD                      
      64.  00:82FD                      
      65.  00:82FD                      calcula_puntero:
      66.  00:82FD  3A 2A 88                ld a,(y_mapa)
      67.  00:8300  47                      ld b,a
      68.  00:8301  AF                      xor a
      69.  00:8302  80 80 80 80 80      [ANCHO_MAPA]    add b
      70.  00:8307  47                      ld b,a
      71.  00:8308  3A 29 88                ld a,(x_mapa)
      72.  00:830B  80                      add a,b
      73.  00:830C  C9                      ret
      74.  00:830D                      
      75.  00:830D                      
      76.  00:830D                      ;*********************************************************************************************************
      77.  00:830D                      ;*
      78.  00:830D                      ;* Obtiene el valor de la posición de memoria apuntada por HL + A
      79.  00:830D                      ;*
      80.  00:830D                      ;* Parámetros: HL = index pointer, A = index
      81.  00:830D                      ;*
      82.  00:830D                      ;* Devuelve: HL = (HL + A)
      83.  00:830D                      ;*
      84.  00:830D                      ;* Modifica: Nada
      85.  00:830D                      ;*
      86.  00:830D                      ;*********************************************************************************************************
      87.  00:830D                      getIndexHL_A:
      88.  00:830D  CD 15 83                call ADD_A_HL
      89.  00:8310  7E                      ld a,(hl)
      90.  00:8311  23                      inc hl
      91.  00:8312  66                      ld h,(hl)
      92.  00:8313  6F                      ld l,a
      93.  00:8314  C9                      ret
      94.  00:8315                      
      95.  00:8315                      
      96.  00:8315                      ;*********************************************************************************************************
      97.  00:8315                      ;*
      98.  00:8315                      ;* Suma HL y A
      99.  00:8315                      ;*
     100.  00:8315                      ;* Parámetros: A, HL
     101.  00:8315                      ;*
     102.  00:8315                      ;* Devuelve: HL = A + HL
     103.  00:8315                      ;*
     104.  00:8315                      ;* Modifica: Nada
     105.  00:8315                      ;*
     106.  00:8315                      ;*********************************************************************************************************
     107.  00:8315                      ADD_A_HL:
     108.  00:8315  85                      add a,l
     109.  00:8316  6F                      ld l,a
     110.  00:8317  D0                      ret nc
     111.  00:8318  24                      inc h
     112.  00:8319  C9                      ret
     113.  00:831A                      
     114.  00:831A                      
     115.  00:831A                      init_vdp:
     116.  00:831A  21 00 00                ld hl,0
     117.  00:831D  01 00 40                ld bc,4000h             ;16 KB
     118.  00:8320  AF                      xor	a                   ;Valor 0
     119.  00:8321  CD 2B 83                call setFillVRAM        ;Ponemos a 0 las 16 KB de la VRAM
     120.  00:8324                      
     121.  00:8324                      
     122.  00:8324                      ;*********************************************************************************************************
     123.  00:8324                      ;*
     124.  00:8324                      ;* Borra la pantalla
     125.  00:8324                      ;*
     126.  00:8324                      ;* Parámetros: Ninguno
     127.  00:8324                      ;*
     128.  00:8324                      ;* Devuelve: Nada
     129.  00:8324                      ;*
     130.  00:8324                      ;* Modifica: HL, BC, A
     131.  00:8324                      ;*
     132.  00:8324                      ;*********************************************************************************************************
     133.  00:8324                      clearScreen:
     134.  00:8324  21 00 78                ld hl,7800h	        ;tabla	de nombres (#3800) VRAM	= 16K #0000-#3FFF
     135.  00:8327  01 00 03                ld bc,300h	        ;name table size
     136.  00:832A  AF                      xor	a
     137.  00:832B                          ;sigue abajo en setFillVRAM
     138.  00:832B                      
     139.  00:832B                      
     140.  00:832B                      ;*********************************************************************************************************
     141.  00:832B                      ;*
     142.  00:832B                      ;* Escribe en una zona de la VRAM el valor de A
     143.  00:832B                      ;*
     144.  00:832B                      ;* Parámetros: HL = dirección VRAM, A = dato a escribir, BC = número de bytes
     145.  00:832B                      ;*
     146.  00:832B                      ;* Devuelve: Nada
     147.  00:832B                      ;*
     148.  00:832B                      ;* Modifica: A', C'
     149.  00:832B                      ;*
     150.  00:832B                      ;*********************************************************************************************************
     151.  00:832B                      setFillVRAM:
     152.  00:832B  CD 3C 83                call setVDPWrite
     153.  00:832E                      fillVRAM:
     154.  00:832E  08                      ex af,af'
     155.  00:832F                      VRAM_write2:                        ;envío de las órdenes al VDP
     156.  00:832F  08                      ex af,af'
     157.  00:8330  D9                      exx
     158.  00:8331  ED 79                   out (c),a
     159.  00:8333  D9                      exx
     160.  00:8334  08                      ex af,af'
     161.  00:8335  0B                      dec bc
     162.  00:8336  78                      ld a,b
     163.  00:8337  B1                      or c
     164.  00:8338  20 F5                   jr nz,VRAM_write2
     165.  00:833A  08                      ex af,af'
     166.  00:833B  C9                      ret
     167.  00:833C                      
     168.  00:833C                      
     169.  00:833C                      ;*********************************************************************************************************
     170.  00:833C                      ;*
     171.  00:833C                      ;* Prepara el VDP para escribir en VRAM
     172.  00:833C                      ;*
     173.  00:833C                      ;* Parámetros: HL = dirección VRAM en la que queremos escribir
     174.  00:833C                      ;*
     175.  00:833C                      ;* Devuelve: C' = Puerto de escritura del VDP
     176.  00:833C                      ;*
     177.  00:833C                      ;* Modifica: A'
     178.  00:833C                      ;*
     179.  00:833C                      ;*********************************************************************************************************
     180.  00:833C                      setVDPWrite:
     181.  00:833C  08                      ex af,af'
     182.  00:833D  CD 53 00                call SETWRT
     183.  00:8340  D9                      exx
     184.  00:8341  3A 06 00                ld a,(byte_6)
     185.  00:8344  4F                      ld c,a
     186.  00:8345  D9                      exx
     187.  00:8346  08                      ex af,af'
     188.  00:8347  C9                      ret
     189.  00:8348                      
     190.  00:8348                      
     191.  00:8348                      apaga_pantalla:
     192.  00:8348  06 22                   ld b,022h
     193.  00:834A  0E 01                   ld c,1
     194.  00:834C  CD 47 00                call WRTVDP
     195.  00:834F  C9                      ret
     196.  00:8350                      
     197.  00:8350                      enciende_pantalla:
     198.  00:8350  06 E2                   ld b,0E2h
     199.  00:8352  0E 01                   ld c,1
     200.  00:8354  CD 47 00                call WRTVDP
     201.  00:8357  C9                      ret
     202.  00:8358                      
     203.  00:8358                      ;*********************************************************************************************************
     204.  00:8358                      ;*
     205.  00:8358                      ;* Configura el VDP
     206.  00:8358                      ;* - Screen 2
     207.  00:8358                      ;* - Sprites 16x16 unzoomed
     208.  00:8358                      ;* - Pattern name table = #3800-#3AFF
     209.  00:8358                      ;* - Pattern color table = #0000-#17FF
     210.  00:8358                      ;* - Pattern generator table = #2000-#37FF
     211.  00:8358                      ;* - Sprite atribute table	= #3b00-#3B7F
     212.  00:8358                      ;* - Sprite generator table = #1800-#1FFF
     213.  00:8358                      ;* - Background color = #E0 (Gris/Transparente)
     214.  00:8358                      ;*
     215.  00:8358                      ;* Parámetros: Ninguno
     216.  00:8358                      ;*
     217.  00:8358                      ;* Devuelve: Nada
     218.  00:8358                      ;*
     219.  00:8358                      ;* Modifica: AF, HL, BC, D
     220.  00:8358                      ;*
     221.  00:8358                      ;*********************************************************************************************************
     222.  00:8358                      SetVideoMode:
     223.  00:8358  21 69 83                ld hl,VDP_InitData
     224.  00:835B  16 08                   ld d,8
     225.  00:835D  0E 00                   ld c,0
     226.  00:835F                      setVideoMode2:
     227.  00:835F  46                      ld b,(hl)
     228.  00:8360  CD 47 00                call WRTVDP
     229.  00:8363  23                      inc hl
     230.  00:8364  0C                      inc c
     231.  00:8365  15                      dec d
     232.  00:8366  20 F7                   jr nz,setVideoMode2
     233.  00:8368  C9                      ret
     234.  00:8369                      VDP_InitData:	
     235.  00:8369  02                      db 2
     236.  00:836A  E2                      db 0E2h
     237.  00:836B  0E                      db 0Eh
     238.  00:836C  7F                      db 7Fh
     239.  00:836D  07                      db 7
     240.  00:836E  76                      db 76h
     241.  00:836F  03                      db 3
     242.  00:8370  E0                      db 0E0h
     243.  00:8371                      
     244.  00:8371                      
     245.  00:8371                      doCortinilla:
     246.  00:8371  3E 20               	ld a,32
     247.  00:8373  32 2C 88                ld (waitCounter),a
     248.  00:8376  3E 01                   ld a,1
     249.  00:8378  32 2F 88                ld (enCortinilla),a
     250.  00:837B  CD 7F 83                call drawCortinilla
     251.  00:837E  C9                      ret
     252.  00:837F                      
     253.  00:837F                      
     254.  00:837F                      ;*********************************************************************************************************
     255.  00:837F                      ;*
     256.  00:837F                      ;* Borra la pantalla haciendo una cortinilla de izquierda a derecha, cada invocación una columna
     257.  00:837F                      ;*
     258.  00:837F                      ;* Parámetros: waitCounter = 32 - columna a borrar
     259.  00:837F                      ;*
     260.  00:837F                      ;* Devuelve: Nada
     261.  00:837F                      ;*
     262.  00:837F                      ;* Modifica: DE, HL, AF, B
     263.  00:837F                      ;*
     264.  00:837F                      ;*********************************************************************************************************
     265.  00:837F                      drawCortinilla:
     266.  00:837F                      
     267.  00:837F  21 2C 88                ld hl,waitCounter
     268.  00:8382  35                      dec (hl)
     269.  00:8383                          ;estamos construyendo la serie #3800 hasta #381F
     270.  00:8383                          ;que son las posiciones de la primera fila de pantalla
     271.  00:8383                          ;en la tabla de nombres
     272.  00:8383  7E                      ld a,(hl)
     273.  00:8384  26 38                   ld h,38h		                ;#3800 es la tabla de nombres
     274.  00:8386  EE 1F                   xor	1Fh                         ;segundo nible de la tabla de nombres es 31-waitCounter
     275.  00:8388  6F                      ld l,a
     276.  00:8389                      
     277.  00:8389  06 18                   ld b,18h		                ;las 24 filas de la pantalla
     278.  00:838B  AF                      xor	a                           ;valor 0 a escribir en VRAM, borra la pantalla
     279.  00:838C                      
     280.  00:838C                      drawCortinilla2:                    ;borra una columna
     281.  00:838C  CD 4D 00                call WRTVRM
     282.  00:838F  11 20 00                ld de,20h                       ;las 32 columnas de la pantalla
     283.  00:8392  19                      add	hl,de		                ;siguiente fila
     284.  00:8393  10 F7                   djnz drawCortinilla2
     285.  00:8395                      
     286.  00:8395  3A 2C 88                ld a,(waitCounter)
     287.  00:8398  B7                      or a
     288.  00:8399  28 01                   jr z,.finCortinilla
     289.  00:839B                      
     290.  00:839B                      .salimos
     291.  00:839B  C9                      ret
     292.  00:839C                      .finCortinilla
     293.  00:839C  AF                      xor a
     294.  00:839D  32 2F 88                ld (enCortinilla),a
     295.  00:83A0  CD E5 82                call pinta_pantalla
     296.  00:83A3  C9                      ret
     115   00:83A4                      
     116   00:83A4                      pantallas:
     117   00:83A4  B8 83                   dw p1
     118   00:83A6  24 84                   dw p2
     119   00:83A8  9C 84                   dw p3
     120   00:83AA  EB 84                   dw p4
     121   00:83AC  0C 85                   dw p5
     122   00:83AE  2D 85                   dw p6
     123   00:83B0  4E 85                   dw p7
     124   00:83B2  6F 85                   dw p8
     125   00:83B4  C2 85                   dw p9
     126   00:83B6  E3 85                   dw p10
     127   00:83B8                      
     128   00:83B8                      p1:
     129   00:83B8  (006C)                  incbin "gfx/prueba.bin.asm_0_0.plet5"
     130   00:8424                      p2:
     131   00:8424  (0078)                  incbin "gfx/prueba.bin.asm_1_0.plet5"
     132   00:849C                      p3:
     133   00:849C  (004F)                  incbin "gfx/prueba.bin.asm_2_0.plet5"
     134   00:84EB                      p4:
     135   00:84EB  (0021)                  incbin "gfx/prueba.bin.asm_3_0.plet5"
     136   00:850C                      p5:
     137   00:850C  (0021)                  incbin "gfx/prueba.bin.asm_4_0.plet5"
     138   00:852D                      p6:
     139   00:852D  (0021)                  incbin "gfx/prueba.bin.asm_0_1.plet5"
     140   00:854E                      p7:
     141   00:854E  (0021)                  incbin "gfx/prueba.bin.asm_1_1.plet5"
     142   00:856F                      p8:
     143   00:856F  (0053)                  incbin "gfx/prueba.bin.asm_2_1.plet5"
     144   00:85C2                      p9:
     145   00:85C2  (0021)                  incbin "gfx/prueba.bin.asm_3_1.plet5"
     146   00:85E3                      p10:
     147   00:85E3  (0021)                  incbin "gfx/prueba.bin.asm_4_1.plet5"
     148   00:8604                      
     149   00:8604                      depack_VRAM:	
     150   00:8604                          include "lib/PL_VRAM_Depack_SJASM.asm"
       1.  00:8604                      ;-----------------------------------------------------------
       2.  00:8604                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       3.  00:8604                      ; HL = RAM/ROM source ; DE = VRAM destination
       4.  00:8604                      ;-----------------------------------------------------------
       5.  00:8604  F3                  	di
       6.  00:8605                      
       7.  00:8605                      ; VRAM address setup
       8.  00:8605  7B                  	ld	a,e
       9.  00:8606  D3 99               	out	[099h],a
      10.  00:8608  7A                  	ld	a,d
      11.  00:8609  F6 40               	or	040h
      12.  00:860B  D3 99               	out	[099h],a
      13.  00:860D                      
      14.  00:860D                      ; Initialization
      15.  00:860D  7E                  	ld	a,[hl]
      16.  00:860E  23                  	inc	hl
      17.  00:860F  D9                  	exx
      18.  00:8610  11 00 00            	ld	de,0
      19.  00:8613  87                  	add	a,a
      20.  00:8614  3C                  	inc	a
      21.  00:8615  CB 13               	rl	e
      22.  00:8617  87                  	add	a,a
      23.  00:8618  CB 13               	rl	e
      24.  00:861A  87                  	add	a,a
      25.  00:861B  CB 13               	rl	e
      26.  00:861D  CB 13               	rl	e
      27.  00:861F  21 D6 86            	ld	hl,modes
      28.  00:8622  19                  	add	hl,de
      29.  00:8623  5E                  	ld	e,[hl]
      30.  00:8624  DD 6B               	ld	ixl,e
      31.  00:8626  23                  	inc	hl
      32.  00:8627  5E                  	ld	e,[hl]
      33.  00:8628  DD 63               	ld	ixh,e
      34.  00:862A  1E 01               	ld	e,1
      35.  00:862C  D9                  	exx
      36.  00:862D  FD 21 36 86         	ld	iy,loop
      37.  00:8631                      
      38.  00:8631                      ; Main depack loop
      39.  00:8631  0E 98               literal:ld	c,098h
      40.  00:8633  ED A3               	outi
      41.  00:8635  13                  	inc	de
      42.  00:8636  87                  loop:	add	a,a
      43.  00:8637  CC CA 86              	call	z,getbit
      44.  00:863A  30 F5               	jr	nc,literal
      45.  00:863C                      
      46.  00:863C                      ; Compressed data
      47.  00:863C  D9                  	exx
      48.  00:863D  62                  	ld	h,d
      49.  00:863E  6B                  	ld	l,e
      50.  00:863F  87                  getlen: add	a,a
      51.  00:8640  CC CE 86            	call	z,getbitexx
      52.  00:8643  30 1D               	jr	nc,lenok
      53.  00:8645  87                  lus:	add	a,a
      54.  00:8646  CC CE 86            	call	z,getbitexx
      55.  00:8649  ED 6A               	adc	hl,hl
      56.  00:864B  D8                  	ret	c
      57.  00:864C  87                  	add	a,a
      58.  00:864D  CC CE 86            	call	z,getbitexx
      59.  00:8650  30 10               	jr	nc,lenok
      60.  00:8652  87                  	add	a,a
      61.  00:8653  CC CE 86            	call	z,getbitexx
      62.  00:8656  ED 6A               	adc	hl,hl
      63.  00:8658  DA D4 86            	jp	c,Depack_out
      64.  00:865B  87                  	add	a,a
      65.  00:865C  CC CE 86            	call	z,getbitexx
      66.  00:865F  DA 45 86            	jp	c,lus
      67.  00:8662  23                  lenok:  inc	hl
      68.  00:8663  D9                  	exx
      69.  00:8664  4E                  	ld	c,[hl]
      70.  00:8665  23                  	inc	hl
      71.  00:8666  06 00               	ld	b,0
      72.  00:8668  CB 79               	bit	7,c
      73.  00:866A  CA 9D 86            	jp	z,offsok
      74.  00:866D  DD E9               	jp	ix
      75.  00:866F                      
      76.  00:866F  87                  mode7:  add	a,a
      77.  00:8670  CC CA 86              	call	z,getbit
      78.  00:8673  CB 10               	rl	b
      79.  00:8675  87                  mode6:	add	a,a
      80.  00:8676  CC CA 86              	call	z,getbit
      81.  00:8679  CB 10               	rl	b
      82.  00:867B  87                  mode5:  add	a,a
      83.  00:867C  CC CA 86              	call	z,getbit
      84.  00:867F  CB 10               	rl	b
      85.  00:8681  87                  mode4:  add	a,a
      86.  00:8682  CC CA 86              	call	z,getbit
      87.  00:8685  CB 10               	rl	b
      88.  00:8687  87                  mode3:  add	a,a
      89.  00:8688  CC CA 86              	call	z,getbit
      90.  00:868B  CB 10               	rl	b
      91.  00:868D  87                  mode2:	add	a,a
      92.  00:868E  CC CA 86              	call	z,getbit
      93.  00:8691  CB 10               	rl	b
      94.  00:8693  87                  	add	a,a
      95.  00:8694  CC CA 86              	call	z,getbit
      96.  00:8697  30 04               	jr	nc,offsok
      97.  00:8699  B7                  	or	a
      98.  00:869A  04                  	inc	b
      99.  00:869B  CB B9               	res	7,c
     100.  00:869D  03                  offsok: inc	bc
     101.  00:869E  E5                  	push	hl
     102.  00:869F  D9                  	exx
     103.  00:86A0  E5                  	push	hl
     104.  00:86A1  D9                  	exx
     105.  00:86A2  6B                  	ld	l,e
     106.  00:86A3  62                  	ld	h,d
     107.  00:86A4  ED 42               	sbc	hl,bc
     108.  00:86A6  C1                  	pop	bc
     109.  00:86A7  F5                  	push	af
     110.  00:86A8  7D                  .loop:	ld	a,l
     111.  00:86A9  D3 99               	out	[099h],a
     112.  00:86AB  7C                  	ld	a,h
     113.  00:86AC  00                  	nop                     ; VDP timing
     114.  00:86AD  D3 99               	out	[099h],a
     115.  00:86AF  00                  	nop                     ; VDP timing
     116.  00:86B0  DB 98               	in	a,[098h]
     117.  00:86B2  08                  	ex	af,af'
     118.  00:86B3  7B                  	ld	a,e
     119.  00:86B4  00                  	nop			; VDP timing
     120.  00:86B5  D3 99               	out	[099h],a
     121.  00:86B7  7A                  	ld	a,d
     122.  00:86B8  F6 40               	or	040h
     123.  00:86BA  D3 99               	out	[099h],a
     124.  00:86BC  08                  	ex	af,af'
     125.  00:86BD  00                  	nop			; VDP timing
     126.  00:86BE  D3 98               	out	[098h],a
     127.  00:86C0  13                  	inc	de
     128.  00:86C1  ED A1               	cpi
     129.  00:86C3  EA A8 86            	jp	pe,.loop
     130.  00:86C6  F1                  	pop	af
     131.  00:86C7  E1                  	pop	hl
     132.  00:86C8  FD E9               	jp	iy
     133.  00:86CA                      
     134.  00:86CA  7E                  getbit: ld	a,[hl]
     135.  00:86CB  23                  	inc	hl
     136.  00:86CC  17                  	rla
     137.  00:86CD  C9                  	ret
     138.  00:86CE                      
     139.  00:86CE                      getbitexx:
     140.  00:86CE  D9                  	exx
     141.  00:86CF  7E                  	ld	a,[hl]
     142.  00:86D0  23                  	inc	hl
     143.  00:86D1  D9                  	exx
     144.  00:86D2  17                  	rla
     145.  00:86D3  C9                  	ret
     146.  00:86D4                      
     147.  00:86D4                      ; Depacker exit
     148.  00:86D4                      Depack_out:
     149.  00:86D4  FB                  	ei
     150.  00:86D5  C9                  	ret
     151.  00:86D6                      
     152.  00:86D6                      modes:
     153.  00:86D6  9D 86               	dw	offsok
     154.  00:86D8  8D 86               	dw	mode2
     155.  00:86DA  87 86               	dw	mode3
     156.  00:86DC  81 86               	dw	mode4
     157.  00:86DE  7B 86               	dw	mode5
     158.  00:86E0  75 86               	dw	mode6
     159.  00:86E2  6F 86               	dw	mode7
     151   00:86E4                      
     152   00:86E4                      tabla_colores:
     153   00:86E4  (007F)              	incbin	"gfx/prueba.bin.clr.plet5"
     154   00:8763                      tabla_tiles:
     155   00:8763  (00C6)              	incbin	"gfx/prueba.bin.chr.plet5"
     156   00:8829                      
     157   00:8829                          include "variables.asm"
       1.  00:8829                      ;*************************
       2.  00:8829                      ; DEFINICION DE VARIABLES
       3.  00:8829                      ;*************************
       4.  00:8829                      
       5.  00:8829  00                  x_mapa:				db 0		;coordenada x
       6.  00:882A  00                  y_mapa:				db 0		;coordenada y
       7.  00:882B  00                  retardo:			db 0
       8.  00:882C  00                  waitCounter:        db 0
       9.  00:882D  00                  tickInProgress:     db 0
      10.  00:882E  00                  timer:              db 0
      11.  00:882F  00                  enCortinilla:       db 0
     158   00:8830                      
     159   00:8830                      ;******************
     160   00:8830                      ; FIN DEL PROGRAMA
     161   00:8830                      ;******************
     162   00:8830                      
     163   00:8830                      END:

    LABELS
-------------------------------------------------
00:000000D5   GTSTCK
00:0000013E   RDVDP
00:00000047   WRTVDP
00:00000053   SETWRT
00:0000004D   WRTVRM
00:0000FD9F   HTIMI
00:00000005   ANCHO_MAPA
00:00000002   ALTO_MAPA
00:00000006   byte_6
00:00000006 X RETARDO_MAX
00:00008200   BEGIN
00:0000825E X bucle_infinito
00:00008260   tickMain
00:00008282   tickMain.seguimos
00:0000829A   tickMain.terminamos
00:0000829E   tickMain2
00:000082A3   do_arriba
00:000082B1   do_arriba.end
00:000082B3   do_abajo
00:000082C2   do_abajo.end
00:000082C4   do_derecha
00:000082D3   do_derecha.end
00:000082D5   do_izquierda
00:000082E3   do_izquierda.end
00:000082E5   pinta_pantalla
00:000082FD   calcula_puntero
00:0000830D   getIndexHL_A
00:00008315   ADD_A_HL
00:0000831A X init_vdp
00:00008324 X clearScreen
00:0000832B   setFillVRAM
00:0000832E X fillVRAM
00:0000832F   VRAM_write2
00:0000833C   setVDPWrite
00:00008348   apaga_pantalla
00:00008350   enciende_pantalla
00:00008358   SetVideoMode
00:0000835F   setVideoMode2
00:00008369   VDP_InitData
00:00008371   doCortinilla
00:0000837F   drawCortinilla
00:0000838C   drawCortinilla2
00:0000839B X drawCortinilla2.salimos
00:0000839C   drawCortinilla2.finCortinilla
00:000083A4   pantallas
00:000083B8   p1
00:00008424   p2
00:0000849C   p3
00:000084EB   p4
00:0000850C   p5
00:0000852D   p6
00:0000854E   p7
00:0000856F   p8
00:000085C2   p9
00:000085E3   p10
00:00008604   depack_VRAM
00:00008631   literal
00:00008636   loop
00:0000863F X getlen
00:00008645   lus
00:00008662   lenok
00:0000866F   mode7
00:00008675   mode6
00:0000867B   mode5
00:00008681   mode4
00:00008687   mode3
00:0000868D   mode2
00:0000869D   offsok
00:000086A8   offsok.loop
00:000086CA   getbit
00:000086CE   getbitexx
00:000086D4   Depack_out
00:000086D6   modes
00:000086E4   tabla_colores
00:00008763   tabla_tiles
00:00008829   x_mapa
00:0000882A   y_mapa
00:0000882B X retardo
00:0000882C   waitCounter
00:0000882D   tickInProgress
00:0000882E   timer
00:0000882F   enCortinilla
00:00008830   END


 Output: out/main
-------------------------------------------------

 Page: 00
  Org: 00008200  Size: *  Used: 00000000

    No output

 Output: out/main.bin
-------------------------------------------------

 Page: 00
  Org: 00008200  Size: *  Used: 00000637

   Address   Length Align   Label
   00008200    1591         BEGIN
